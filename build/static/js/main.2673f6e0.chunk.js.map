{"version":3,"sources":["Draw/Canvas.js","use-event-listener.js","Draw/ChordsAnmation.js","Data/initialData.js","Data/chordsData.js","App.js","serviceWorker.js","index.js"],"names":["convertHexToRGBA","hexCode","opacity","hex","replace","r","parseInt","substring","g","b","Canvas","props","keycode","setKey","allData","setAllData","scale","canvasRef","useRef","useEffect","canvas","current","context","getContext","ratio","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","getPixelRatio","width","getComputedStyle","getPropertyValue","slice","height","style","ctx","frameCount","new_data","Object","keys","forEach","ind","i","length","item","key","localeCompare","opa","col_display","col_origin","entries","entry","index","beginPath","lineWidth","strokeStyle","part","Math","PI","start","radius","arc","stroke","draw","ref","innerWidth","innerHeigh","useEventListener","eventName","callback","element","savedCallback","eventListener","event","addEventListener","removeEventListener","ChordsAnimation","curr_chord","playChord","setPlayChord","useState","audio","setAudio","chord","setChord","clearRect","fillStyle","c","deg","cos","sin","fill","Soundfont","require","audioContext","AudioContext","instrument","then","soundFontPlayer","play","animationFrameId","render","requestAnimationFrame","cancelAnimationFrame","1","2","3","4","5","keyboard","Array","pitch","datas","obj","data_collection","value","App","octave","setOctave","initialData","setPitch","temp","filter","new_pitch","chordsData","arr","process_chord","note","console","log","handleClick","id","className","onClick","href","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2673f6e0.chunk.js","sourcesContent":["\nimport React, { useRef, useEffect, useState } from 'react'\n\nconst inc = 5\n\n\n\nconst getPixelRatio = context => {\n  var backingStore =\n  context.backingStorePixelRatio ||\n  context.webkitBackingStorePixelRatio ||\n  context.mozBackingStorePixelRatio ||\n  context.msBackingStorePixelRatio ||\n  context.oBackingStorePixelRatio ||\n  context.backingStorePixelRatio ||\n  1;\n  \n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\n\n//sound  \nconst convertHexToRGBA = (hexCode, opacity) => {\n\n  const hex = hexCode.replace('#', ''); \n  \n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  return `rgba(${r},${g},${b},${opacity / 100})`;\n};\n\n\n\n\n//start of function\nconst Canvas = props=> {\n  const { keycode, setKey, allData, setAllData, scale } = props\n  const canvasRef = useRef(null)\n\n  \n\n  const draw = (ctx, frameCount) => {\n    let new_data = {}\n    Object.keys(allData).forEach(ind => {\n      if (ind == scale){\n        for (let i = 0; i < allData[ind].length; i++){\n          let item = allData[ind][i]\n          if (item.key.localeCompare(keycode) == 0){\n            item.opa += inc\n            item.col_display = convertHexToRGBA(item.col_origin, item.opa)\n            \n          }\n          else{\n            continue;\n          }\n\n        }\n\n        new_data[ind] = allData[ind]\n\n     }else{\n       \n       new_data[ind] = allData[ind]\n       \n     }\n    })\n\n    setAllData(new_data)\n\n  \n    \n    Object.entries(allData).forEach(entry => {\n      const [key, value] = entry;\n      value.forEach((item, index) => {\n        ctx.beginPath(); \n        ctx.lineWidth = 20;\n\n        ctx.strokeStyle = item.col_display\n        let count = 12\n\n        let part = 2*Math.PI / count\n        let start = index* part\n        let radius = key* 60\n        ctx.arc(350, 350, radius, start, part+start)\n        ctx.stroke()\n      \n      })\n    });\n\n  \n\n\n    setKey('')\n    \n  }\n\n\n\n\n\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    let frameCount = 0\n\n\n\n\n    let ratio = getPixelRatio(context);\n    let width = window.getComputedStyle(canvas)\n        .getPropertyValue('width')\n        .slice(0, -2);\n    let height = getComputedStyle(canvas)\n        .getPropertyValue('height')\n       .slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    \n\n\n    draw(context, frameCount)\n \n  }, [keycode])\n  \n  return <canvas ref={canvasRef} style={{ width: window.innerWidth, height: window.innerHeigh}}/>\n}\n\nexport default Canvas","import React, { useEffect, useRef } from 'react'\n\nfunction useEventListener(eventName, callback, element = window) {\n  const savedCallback = useRef()\n\n  useEffect(\n    () => {\n      savedCallback.current = callback\n    },\n    [callback]\n  )\n\n  useEffect(function() {\n    if (typeof element === 'undefined') return\n\n    const eventListener = event => savedCallback.current(event)\n\n    element.addEventListener(eventName, eventListener)\n\n    return function cleanup() {\n      return element.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName])\n}\n\nexport default useEventListener","import React, { useRef, useEffect, useState } from 'react'\n\nconst getPixelRatio = context => {\n  var backingStore =\n  context.backingStorePixelRatio ||\n  context.webkitBackingStorePixelRatio ||\n  context.mozBackingStorePixelRatio ||\n  context.msBackingStorePixelRatio ||\n  context.oBackingStorePixelRatio ||\n  context.backingStorePixelRatio ||\n  1;\n  \n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst ChordsAnimation = props => {\n  //only if need to playchord then setchord\n  const { curr_chord,  playChord, setPlayChord} = props\n  const [audio, setAudio] = useState(null)\n  const [chord, setChord] = useState()  \n  // const [playChord, setPlayChord] =useState(false)\n\n  const canvasRef = useRef(null)\n  \n  const draw = (ctx, frameCount) => {\n    \n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = 'white'\n\n    const r = 330\n    const c = {x: 350, y: 350}\n\n    if (chord){\n      Object.keys(chord).forEach(item=> {\n        ctx.beginPath()\n        let i = chord[item]\n        let deg = 15 + i* 30\n        ctx.arc(c.x + r* Math.cos(deg * Math.PI /180), c.y + r* Math.sin(deg *Math.PI /180), 8*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n        ctx.fill()\n  \n      })\n    }\n\n  }\n\n  const play_sound = (() => {\n    if (audio){\n      setChord(curr_chord)\n\n      Object.keys(curr_chord).forEach(item => audio.play(item +\"4\"))\n      \n    }\n  })\n\n \n\n  useEffect(()=>{\n    var Soundfont = require('soundfont-player')\n    var  audioContext = new AudioContext()\n    Soundfont.instrument(audioContext, 'marimba')\n      .then(soundFontPlayer => {\n        setAudio(soundFontPlayer)\n      })\n    //document.addEventListener('mousemove', onmousemove, false);\n  }, [])\n\n  useEffect(()=>{\n\n    if (audio && playChord) {\n        \n        play_sound()\n        setPlayChord(false) \n            \n    }\n  }, [audio, playChord]);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    let frameCount = 0\n    let animationFrameId\n    let ratio = getPixelRatio(context);\n    let width = window.getComputedStyle(canvas)\n        .getPropertyValue('width')\n        .slice(0, -2);\n    let height = getComputedStyle(canvas)\n        .getPropertyValue('height')\n       .slice(0, -2);\n  \n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    \n    \n    //Our draw came here\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return <canvas ref={canvasRef} style={{ width: window.innerWidth, height: window.innerHeigh}}/>\n}\n\nexport default ChordsAnimation","const count = 12\nconst col_origin = {\n            1: ['#F8B3B9', '#FAC8B5', '#FDD8B2', '#ffecb3', \n                '#fff9c4', '#dcedc8', '#c8e6c9', '#b2dfdb',\n                '#b2ebf2', '#bbdefb', '#c5cae9', '#E3C3E4'],\n            \n            2: ['#F4879', '#F8A98C', '#FBC286', '#ffe082',\n                '#fff59d', '#c5e1a5','#a5d6a7', '#80cbc4',\n                '#80deea', '#90caf9', '#9fa8da', '#D3A1D4'],\n\n            3:['#F05A67', '#F58960', '#FAAB58','#ffd54f',\n                '#fff176','#aed581','#81c784','#4db6ac',\n                '#4dd0e1', '#64b5f6', '#7986cb','#C37DC4'],\n\n            4: ['#D44F5B', '#D87955','#dd974e', '#e3b700',\n               '#fdd835', '#7cb342', '#43a047', '#00897b',\n               '#00acc1', '#2A91C2', '#673ab7', '#AC6EAD'],\n\n            5: ['#B7444E', '#BA6849', '#b67939', '#cea706',\n                '#fbc02d', '#689f38', '#388e3c', '#00796b',\n                '#0097a7', '#0d47a1', '#4527a0', '#945F95']\n            }\nconst keyboard= ['a', 'w', 's', 'e', 'd', 'f','t', 'g', 'y', 'h', 'u', 'j']\nconst opa = Array(count).fill(0)\nconst col_display = Array(count).fill(\"white\")\n\nconst pitch = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \n               \"F#\", \"G\",\"G#\", \"A\", \"A#\", \"B\"]\n\n\n// let data_collection = {key: keyboard, col_display: col_display, \n//                           opa:opa, col_origin: col_origin, pitch: pitch}\n\nconst datas = {}\n\nObject.keys(col_origin).forEach(ind =>{\n    let obj = []\n    let data_collection = {key: keyboard, col_display: col_display, \n        opa:opa, col_origin: col_origin[ind], pitch: pitch}\n\n    \n    Object.keys(data_collection).forEach(key => {\n        // for each array element of the property obj[key]\n        data_collection[key].forEach((value, index) => {\n        // if an object doesn't exists at the current index in result\n        // create it\n    \n        if (!obj[index]) {\n        obj[index] = {}\n        }\n        // at the result index, set the key to the current value\n        obj[index][key] = value\n        })\n    })\n\n    datas[ind] = obj\n})\nexport default datas ","\n\nconst pitch = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \n\"F#\", \"G\",\"G#\", \"A\", \"A#\", \"B\"]\n\n\n// let data_collection = {key: keyboard, col_display: col_display, \n//                           opa:opa, col_origin: col_origin, pitch: pitch}\n\nconst datas = {}\n\npitch.forEach((value, ind) =>{\n\n\ndatas[value] = ind\n})\n\nexport default datas","import React from 'react'\nimport Canvas from './Draw/Canvas'\nimport './App.css'\n// import CanvasDraw from './CanvasDraw'\n// import useKey from './useKey'\nimport { useState, useEffect } from 'react'\nimport useEventListener from \"./use-event-listener\";\nimport ChordsAnimation from \"./Draw/ChordsAnmation\"\n\n\nimport initialData from \"./Data/initialData\";\nimport chordsData from \"./Data/chordsData\"\n\n\nfunction App() {\n\n  const [key, setKey] = useState('');\n\n  const [octave, setOctave] = useState(3)\n\n  const [allData,  setAllData] = useState(initialData)\n\n  const [audio, setAudio] = useState(null)\n\n  const [pitch, setPitch] = useState()\n\n  const [chord, setChord] = useState({})  \n  const [playChord, setPlayChord] =useState(false)\n\n\n\n  const process_chord = ((new_pitch) => {\n    if (!(new_pitch in chord)  && !playChord){\n\n\n      let ind = chordsData[new_pitch]\n\n      setChord({...chord, [new_pitch]:ind})\n      \n      if (Object.keys(chord).length >2){\n        setPlayChord(true)\n        let all_notes= Object.keys(chord)\n        all_notes.forEach((item, index, arr) => {\n          arr[index] = item+\"5\"\n        })\n\n        setChord({})\n        \n      }\n    }\n  })\n\n  useEventListener(\n    \"keydown\", \n    (event) => \n    {setKey(event.key) \n    let temp = allData[1].filter(item => {\n \n      return ((item.key).localeCompare(event.key) == 0)\n     \n    })[0]\n    if (typeof temp === 'undefined'){\n        return\n     }\n     setPitch(temp.pitch)\n     process_chord(temp.pitch)\n\n \n  }\n  );\n\n  useEffect(()=> {\n    let note = pitch +octave\n    if (audio){\n      \n      audio.play(note)\n      setPitch('')\n    }else {\n        console.log(\"not set yet\")\n        \n    }\n\n  }\n  ,[pitch])\n\n\n  const handleClick = () => {\n\n    let note = pitch +octave\n    if (audio){\n      audio.play(note)\n      \n    }\n    else {\n      console.log(\"not set yet\")\n    }\n\n  };\n  useEffect(()=>{\n\n    var Soundfont = require('soundfont-player')\n    var  audioContext = new AudioContext()\n    Soundfont.instrument(audioContext, 'acoustic_grand_piano')\n      .then(soundFontPlayer => {\n        setAudio(soundFontPlayer)\n      })\n  }, [])\n\n  useEffect(()=>{\n    if (audio) {\n        handleClick()\n    }\n  }, [audio]);\n\n\n  \n  return (\n\n  <div id=\"canvasBorder\">\n       <div id=\"frame1\">\n      <button className=\"btn\" onClick={() => setOctave(1)}>\n      <i>1</i>\n      </button>\n        <button className=\"btn\" onClick={() => setOctave(2)}>\n      <i>2</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(3)}>\n      <i>3</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(4)}>\n      <i>4</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(5)}>\n      <i>5</i>\n      </button>\n \n    </div>\n\n\n    <div id='cava_draw'>\n   \n    {/* <span id='chord_name' style={{\n            fontSize: font\n          }}>{chordName}</span> */}\n    <Canvas keycode={key} setKey={setKey} allData={allData} setAllData={setAllData} scale={octave}/>\n    <ChordsAnimation curr_chord={chord} playChord={playChord} setPlayChord={setPlayChord}/>\n    <div id=\"circle_center\"></div>\n    </div>\n   \n    <div id=\"frame2\">\n      <div className=\"instru\">\n      <p >\n        You could write your melody on this vinyl record in these steps:\n        <br /><br /><br />\n        Set browser window full screen\n        <br /><br />\n\n        Choose an octave by clicking one of top-left buttons\n        <br /><br />\n\n        Play notes by pressing keyboard keys:\n        \"        a   w  s   e   d   f   t   g   y   h   u   j\" \n        <br /> <br /> <br />\n \n        Then, you will hear and see the best fitting chords for your melody! \n\n\n      </p>\n      </div>\n      <a href=\"https://www.peiyuhyu.com/2020/10/19/i-design-a-music-visualization/\">Learn More</a>\n \n    </div>\n \n\n\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}