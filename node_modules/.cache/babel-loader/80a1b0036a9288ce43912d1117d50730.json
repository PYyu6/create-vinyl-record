{"ast":null,"code":"var _jsxFileName = \"/Users/sylviayu/Desktop/project/create-vinyl-record/src/App.js\";\nimport React from 'react';\nimport Canvas from './Draw/Canvas';\nimport './App.css'; // import CanvasDraw from './CanvasDraw'\n// import useKey from './useKey'\n\nimport { useState, useEffect } from 'react';\nimport useEventListener from \"./use-event-listener\";\nimport ChordsAnimation from \"./Draw/ChordsAnmation\";\nimport initialData from \"./Data/initialData\";\nimport chordsData from \"./Data/chordsData\";\n\nfunction App() {\n  const [key, setKey] = useState('');\n  const [octave, setOctave] = useState(3);\n  const [allData, setAllData] = useState(initialData);\n  const [audio, setAudio] = useState(null);\n  const [pitch, setPitch] = useState();\n  const [chord, setChord] = useState({});\n  const [playChord, setPlayChord] = useState(false);\n\n  const process_chord = new_pitch => {\n    if (!(new_pitch in chord) && !playChord) {\n      let ind = chordsData[new_pitch];\n      setChord({ ...chord,\n        [new_pitch]: ind\n      });\n\n      if (Object.keys(chord).length > 2) {\n        setPlayChord(true);\n        let all_notes = Object.keys(chord);\n        all_notes.forEach((item, index, arr) => {\n          arr[index] = item + \"5\";\n        });\n        setChord({});\n      }\n    }\n  };\n\n  useEventListener(\"keydown\", event => {\n    setKey(event.key);\n    let temp = allData[1].filter(item => {\n      return item.key.localeCompare(event.key) == 0;\n    })[0];\n\n    if (typeof temp === 'undefined') {\n      return;\n    }\n\n    setPitch(temp.pitch);\n    process_chord(temp.pitch);\n  });\n  useEffect(() => {\n    let note = pitch + octave;\n\n    if (audio) {\n      audio.play(note);\n      setPitch('');\n    } else {\n      console.log(\"not set yet\");\n    }\n  }, [pitch]);\n\n  const handleClick = () => {\n    let note = pitch + octave;\n\n    if (audio) {\n      audio.play(note);\n    } else {\n      console.log(\"not set yet\");\n    }\n  };\n\n  useEffect(() => {\n    var Soundfont = require('soundfont-player');\n\n    var audioContext = new AudioContext();\n    Soundfont.instrument(audioContext, 'acoustic_grand_piano').then(soundFontPlayer => {\n      setAudio(soundFontPlayer);\n    });\n  }, []);\n  useEffect(() => {\n    if (audio) {\n      handleClick();\n    }\n  }, [audio]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"canvasBorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"frame1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setOctave(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setOctave(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setOctave(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setOctave(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setOctave(5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"5\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cava_draw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Canvas, {\n    keycode: key,\n    setKey: setKey,\n    allData: allData,\n    setAllData: setAllData,\n    scale: octave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ChordsAnimation, {\n    curr_chord: chord,\n    playChord: playChord,\n    setPlayChord: setPlayChord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"circle_center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"frame2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instru\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"You could write your melody on this vinyl record in these steps:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), \"Make your browser window full screen\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }), \"Choose an octave by clicking one of top-left buttons\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), \"Play Note by pressing any key in the list below:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), \"\\\"a,w,s,e,d,f, t,g,y,h,u,j\\\"\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 16\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }), \"Then, you will hear and see the best fit chords for your melody!\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.peiyuhyu.com/2020/10/19/i-design-a-visualization/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, \"Learn More\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sylviayu/Desktop/project/create-vinyl-record/src/App.js"],"names":["React","Canvas","useState","useEffect","useEventListener","ChordsAnimation","initialData","chordsData","App","key","setKey","octave","setOctave","allData","setAllData","audio","setAudio","pitch","setPitch","chord","setChord","playChord","setPlayChord","process_chord","new_pitch","ind","Object","keys","length","all_notes","forEach","item","index","arr","event","temp","filter","localeCompare","note","play","console","log","handleClick","Soundfont","require","audioContext","AudioContext","instrument","then","soundFontPlayer"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Canvas from './Draw/Canvas'\nimport './App.css'\n// import CanvasDraw from './CanvasDraw'\n// import useKey from './useKey'\nimport { useState, useEffect } from 'react'\nimport useEventListener from \"./use-event-listener\";\nimport ChordsAnimation from \"./Draw/ChordsAnmation\"\n\n\nimport initialData from \"./Data/initialData\";\nimport chordsData from \"./Data/chordsData\"\n\n\nfunction App() {\n\n  const [key, setKey] = useState('');\n\n  const [octave, setOctave] = useState(3)\n\n  const [allData,  setAllData] = useState(initialData)\n\n  const [audio, setAudio] = useState(null)\n\n  const [pitch, setPitch] = useState()\n\n  const [chord, setChord] = useState({})  \n  const [playChord, setPlayChord] =useState(false)\n\n\n\n  const process_chord = ((new_pitch) => {\n    if (!(new_pitch in chord)  && !playChord){\n\n\n      let ind = chordsData[new_pitch]\n\n      setChord({...chord, [new_pitch]:ind})\n      \n      if (Object.keys(chord).length >2){\n        setPlayChord(true)\n        let all_notes= Object.keys(chord)\n        all_notes.forEach((item, index, arr) => {\n          arr[index] = item+\"5\"\n        })\n\n        setChord({})\n        \n      }\n    }\n  })\n\n  useEventListener(\n    \"keydown\", \n    (event) => \n    {setKey(event.key) \n    let temp = allData[1].filter(item => {\n \n      return ((item.key).localeCompare(event.key) == 0)\n     \n    })[0]\n    if (typeof temp === 'undefined'){\n        return\n     }\n     setPitch(temp.pitch)\n     process_chord(temp.pitch)\n\n \n  }\n  );\n\n  useEffect(()=> {\n    let note = pitch +octave\n    if (audio){\n      \n      audio.play(note)\n      setPitch('')\n    }else {\n        console.log(\"not set yet\")\n        \n    }\n\n  }\n  ,[pitch])\n\n\n  const handleClick = () => {\n\n    let note = pitch +octave\n    if (audio){\n      audio.play(note)\n      \n    }\n    else {\n      console.log(\"not set yet\")\n    }\n\n  };\n  useEffect(()=>{\n\n    var Soundfont = require('soundfont-player')\n    var  audioContext = new AudioContext()\n    Soundfont.instrument(audioContext, 'acoustic_grand_piano')\n      .then(soundFontPlayer => {\n        setAudio(soundFontPlayer)\n      })\n  }, [])\n\n  useEffect(()=>{\n    if (audio) {\n        handleClick()\n    }\n  }, [audio]);\n\n\n  \n  return (\n\n  <div id=\"canvasBorder\">\n       <div id=\"frame1\">\n      <button className=\"btn\" onClick={() => setOctave(1)}>\n      <i>1</i>\n      </button>\n        <button className=\"btn\" onClick={() => setOctave(2)}>\n      <i>2</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(3)}>\n      <i>3</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(4)}>\n      <i>4</i>\n      </button>\n      <button className=\"btn\" onClick={() => setOctave(5)}>\n      <i>5</i>\n      </button>\n \n    </div>\n\n\n    <div id='cava_draw'>\n   \n    {/* <span id='chord_name' style={{\n            fontSize: font\n          }}>{chordName}</span> */}\n    <Canvas keycode={key} setKey={setKey} allData={allData} setAllData={setAllData} scale={octave}/>\n    <ChordsAnimation curr_chord={chord} playChord={playChord} setPlayChord={setPlayChord}/>\n    <div id=\"circle_center\"></div>\n    </div>\n   \n    <div id=\"frame2\">\n      <div className=\"instru\">\n      <p >\n        You could write your melody on this vinyl record in these steps:\n        <br /><br />\n        Make your browser window full screen\n        <br /><br />\n\n        Choose an octave by clicking one of top-left buttons\n        <br /><br />\n\n        Play Note by pressing any key in the list below:\n        <br />\"a,w,s,e,d,f, t,g,y,h,u,j\" \n        <br /> <br /> <br />\n \n        Then, you will hear and see the best fit chords for your melody! \n\n\n      </p>\n      </div>\n      <a href=\"https://www.peiyuhyu.com/2020/10/19/i-design-a-visualization/\">Learn More</a>\n \n    </div>\n \n\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}