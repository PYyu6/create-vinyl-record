{"ast":null,"code":"import React,{useEffect,useRef}from'react';function useEventListener(eventName,callback){var element=arguments.length>2&&arguments[2]!==undefined?arguments[2]:window;var savedCallback=useRef();useEffect(function(){savedCallback.current=callback;},[callback]);useEffect(function(){if(typeof element==='undefined')return;var eventListener=function eventListener(event){return savedCallback.current(event);};element.addEventListener(eventName,eventListener);return function cleanup(){return element.removeEventListener(eventName,eventListener);};},[eventName]);}export default useEventListener;","map":{"version":3,"sources":["/Users/sylviayu/Desktop/project/create-vinyl-record/src/use-event-listener.js"],"names":["React","useEffect","useRef","useEventListener","eventName","callback","element","window","savedCallback","current","eventListener","event","addEventListener","cleanup","removeEventListener"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,SAA1B,CAAqCC,QAArC,CAAiE,IAAlBC,CAAAA,OAAkB,2DAARC,MAAQ,CAC/D,GAAMC,CAAAA,aAAa,CAAGN,MAAM,EAA5B,CAEAD,SAAS,CACP,UAAM,CACJO,aAAa,CAACC,OAAd,CAAwBJ,QAAxB,CACD,CAHM,CAIP,CAACA,QAAD,CAJO,CAAT,CAOAJ,SAAS,CAAC,UAAW,CACnB,GAAI,MAAOK,CAAAA,OAAP,GAAmB,WAAvB,CAAoC,OAEpC,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,QAAIH,CAAAA,aAAa,CAACC,OAAd,CAAsBE,KAAtB,CAAJ,EAA3B,CAEAL,OAAO,CAACM,gBAAR,CAAyBR,SAAzB,CAAoCM,aAApC,EAEA,MAAO,SAASG,CAAAA,OAAT,EAAmB,CACxB,MAAOP,CAAAA,OAAO,CAACQ,mBAAR,CAA4BV,SAA5B,CAAuCM,aAAvC,CAAP,CACD,CAFD,CAGD,CAVQ,CAUN,CAACN,SAAD,CAVM,CAAT,CAWD,CAED,cAAeD,CAAAA,gBAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nfunction useEventListener(eventName, callback, element = window) {\n  const savedCallback = useRef()\n\n  useEffect(\n    () => {\n      savedCallback.current = callback\n    },\n    [callback]\n  )\n\n  useEffect(function() {\n    if (typeof element === 'undefined') return\n\n    const eventListener = event => savedCallback.current(event)\n\n    element.addEventListener(eventName, eventListener)\n\n    return function cleanup() {\n      return element.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName])\n}\n\nexport default useEventListener"]},"metadata":{},"sourceType":"module"}