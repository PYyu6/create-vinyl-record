{"ast":null,"code":"var _jsxFileName = \"/Users/sylviayu/Desktop/project/create-vinyl-record/src/Draw/Canvas.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nconst inc = 5;\n\nconst getPixelRatio = context => {\n  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n}; //sound  \n\n\nconst convertHexToRGBA = (hexCode, opacity) => {\n  const hex = hexCode.replace('#', '');\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  return `rgba(${r},${g},${b},${opacity / 100})`;\n}; //start of function\n\n\nconst Canvas = props => {\n  const {\n    keycode,\n    setKey,\n    allData,\n    setAllData,\n    scale\n  } = props;\n  const canvasRef = useRef(null);\n\n  const draw = (ctx, frameCount) => {\n    let new_data = {};\n    Object.keys(allData).forEach(ind => {\n      if (ind == scale) {\n        for (let i = 0; i < allData[ind].length; i++) {\n          let item = allData[ind][i];\n\n          if (item.key.localeCompare(keycode) == 0) {\n            item.opa += inc;\n            item.col_display = convertHexToRGBA(item.col_origin, item.opa);\n          } else {\n            continue;\n          }\n        }\n\n        new_data[ind] = allData[ind];\n      } else {\n        new_data[ind] = allData[ind];\n      }\n    });\n    setAllData(new_data);\n    Object.entries(allData).forEach(entry => {\n      const [key, value] = entry;\n      value.forEach((item, index) => {\n        ctx.beginPath();\n        ctx.lineWidth = 20;\n        ctx.strokeStyle = item.col_display;\n        let count = 12;\n        let part = 2 * Math.PI / count;\n        let start = index * part;\n        let radius = key * 60;\n        ctx.arc(350, 350, radius, start, part + start);\n        ctx.stroke();\n      });\n    });\n    setKey('');\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let ratio = getPixelRatio(context);\n    let width = window.getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2); // console.log(width, height)\n\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    draw(context, frameCount);\n  }, [keycode]);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: window.innerWidth,\n      height: window.innerHeigh\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/sylviayu/Desktop/project/create-vinyl-record/src/Draw/Canvas.js"],"names":["React","useRef","useEffect","useState","inc","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","convertHexToRGBA","hexCode","opacity","hex","replace","r","parseInt","substring","g","b","Canvas","props","keycode","setKey","allData","setAllData","scale","canvasRef","draw","ctx","frameCount","new_data","Object","keys","forEach","ind","i","length","item","key","localeCompare","opa","col_display","col_origin","entries","entry","value","index","beginPath","lineWidth","strokeStyle","count","part","Math","PI","start","radius","arc","stroke","canvas","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","innerWidth","innerHeigh"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useEffect, useState } from 'react'\n\nconst inc = 5\n\n\n\nconst getPixelRatio = context => {\n  var backingStore =\n  context.backingStorePixelRatio ||\n  context.webkitBackingStorePixelRatio ||\n  context.mozBackingStorePixelRatio ||\n  context.msBackingStorePixelRatio ||\n  context.oBackingStorePixelRatio ||\n  context.backingStorePixelRatio ||\n  1;\n  \n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\n\n//sound  \nconst convertHexToRGBA = (hexCode, opacity) => {\n\n  const hex = hexCode.replace('#', ''); \n  \n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  return `rgba(${r},${g},${b},${opacity / 100})`;\n};\n\n\n\n\n//start of function\nconst Canvas = props=> {\n  const { keycode, setKey, allData, setAllData, scale } = props\n  const canvasRef = useRef(null)\n\n  \n\n  const draw = (ctx, frameCount) => {\n    let new_data = {}\n    Object.keys(allData).forEach(ind => {\n      if (ind == scale){\n        for (let i = 0; i < allData[ind].length; i++){\n          let item = allData[ind][i]\n          if (item.key.localeCompare(keycode) == 0){\n            item.opa += inc\n            item.col_display = convertHexToRGBA(item.col_origin, item.opa)\n            \n          }\n          else{\n            continue;\n          }\n\n        }\n\n        new_data[ind] = allData[ind]\n\n     }else{\n       \n       new_data[ind] = allData[ind]\n       \n     }\n    })\n\n    setAllData(new_data)\n\n  \n    \n    Object.entries(allData).forEach(entry => {\n      const [key, value] = entry;\n      value.forEach((item, index) => {\n        ctx.beginPath(); \n        ctx.lineWidth = 20;\n\n        ctx.strokeStyle = item.col_display\n        let count = 12\n\n        let part = 2*Math.PI / count\n        let start = index* part\n        let radius = key* 60\n        ctx.arc(350, 350, radius, start, part+start)\n        ctx.stroke()\n      \n      })\n    });\n\n  \n\n\n    setKey('')\n    \n  }\n\n\n\n\n\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    let frameCount = 0\n\n\n\n\n    let ratio = getPixelRatio(context);\n    let width = window.getComputedStyle(canvas)\n        .getPropertyValue('width')\n        .slice(0, -2);\n    let height = getComputedStyle(canvas)\n        .getPropertyValue('height')\n       .slice(0, -2);\n    // console.log(width, height)\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    \n\n\n    draw(context, frameCount)\n \n  }, [keycode])\n  \n  return <canvas ref={canvasRef} style={{ width: window.innerWidth, height: window.innerHeigh}}/>\n}\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}