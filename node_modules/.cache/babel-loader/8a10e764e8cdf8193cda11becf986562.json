{"ast":null,"code":"'use strict';\n\nvar note = require('note-parser');\n\nvar isMidi = function (n) {\n  return n !== null && n !== [] && n >= 0 && n < 129;\n};\n\nvar toMidi = function (n) {\n  return isMidi(n) ? +n : note.midi(n);\n}; // Adds note name to midi conversion\n\n\nmodule.exports = function (player) {\n  if (player.buffers) {\n    var map = player.opts.map;\n    var toKey = typeof map === 'function' ? map : toMidi;\n\n    var mapper = function (name) {\n      return name ? toKey(name) || name : null;\n    };\n\n    player.buffers = mapBuffers(player.buffers, mapper);\n    var start = player.start;\n\n    player.start = function (name, when, options) {\n      var key = mapper(name);\n      var dec = key % 1;\n\n      if (dec) {\n        key = Math.floor(key);\n        options = Object.assign(options || {}, {\n          cents: Math.floor(dec * 100)\n        });\n      }\n\n      return start(key, when, options);\n    };\n  }\n\n  return player;\n};\n\nfunction mapBuffers(buffers, toKey) {\n  return Object.keys(buffers).reduce(function (mapped, name) {\n    mapped[toKey(name)] = buffers[name];\n    return mapped;\n  }, {});\n}","map":{"version":3,"sources":["/Users/sylviayu/node_modules/sample-player/lib/notes.js"],"names":["note","require","isMidi","n","toMidi","midi","module","exports","player","buffers","map","opts","toKey","mapper","name","mapBuffers","start","when","options","key","dec","Math","floor","Object","assign","cents","keys","reduce","mapped"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAIC,MAAM,GAAG,UAAUC,CAAV,EAAa;AAAE,SAAOA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAApB,IAA0BA,CAAC,IAAI,CAA/B,IAAoCA,CAAC,GAAG,GAA/C;AAAoD,CAAhF;;AACA,IAAIC,MAAM,GAAG,UAAUD,CAAV,EAAa;AAAE,SAAOD,MAAM,CAACC,CAAD,CAAN,GAAY,CAACA,CAAb,GAAiBH,IAAI,CAACK,IAAL,CAAUF,CAAV,CAAxB;AAAsC,CAAlE,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACjC,MAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,QAAIC,GAAG,GAAGF,MAAM,CAACG,IAAP,CAAYD,GAAtB;AACA,QAAIE,KAAK,GAAG,OAAOF,GAAP,KAAe,UAAf,GAA4BA,GAA5B,GAAkCN,MAA9C;;AACA,QAAIS,MAAM,GAAG,UAAUC,IAAV,EAAgB;AAC3B,aAAOA,IAAI,GAAGF,KAAK,CAACE,IAAD,CAAL,IAAeA,IAAlB,GAAyB,IAApC;AACD,KAFD;;AAIAN,IAAAA,MAAM,CAACC,OAAP,GAAiBM,UAAU,CAACP,MAAM,CAACC,OAAR,EAAiBI,MAAjB,CAA3B;AACA,QAAIG,KAAK,GAAGR,MAAM,CAACQ,KAAnB;;AACAR,IAAAA,MAAM,CAACQ,KAAP,GAAe,UAAUF,IAAV,EAAgBG,IAAhB,EAAsBC,OAAtB,EAA+B;AAC5C,UAAIC,GAAG,GAAGN,MAAM,CAACC,IAAD,CAAhB;AACA,UAAIM,GAAG,GAAGD,GAAG,GAAG,CAAhB;;AACA,UAAIC,GAAJ,EAAS;AACPD,QAAAA,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAN;AACAD,QAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAcN,OAAO,IAAI,EAAzB,EAA6B;AAAEO,UAAAA,KAAK,EAAEJ,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB;AAAT,SAA7B,CAAV;AACD;;AACD,aAAOJ,KAAK,CAACG,GAAD,EAAMF,IAAN,EAAYC,OAAZ,CAAZ;AACD,KARD;AASD;;AACD,SAAOV,MAAP;AACD,CArBD;;AAuBA,SAASO,UAAT,CAAqBN,OAArB,EAA8BG,KAA9B,EAAqC;AACnC,SAAOW,MAAM,CAACG,IAAP,CAAYjB,OAAZ,EAAqBkB,MAArB,CAA4B,UAAUC,MAAV,EAAkBd,IAAlB,EAAwB;AACzDc,IAAAA,MAAM,CAAChB,KAAK,CAACE,IAAD,CAAN,CAAN,GAAsBL,OAAO,CAACK,IAAD,CAA7B;AACA,WAAOc,MAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID","sourcesContent":["'use strict'\n\nvar note = require('note-parser')\nvar isMidi = function (n) { return n !== null && n !== [] && n >= 0 && n < 129 }\nvar toMidi = function (n) { return isMidi(n) ? +n : note.midi(n) }\n\n// Adds note name to midi conversion\nmodule.exports = function (player) {\n  if (player.buffers) {\n    var map = player.opts.map\n    var toKey = typeof map === 'function' ? map : toMidi\n    var mapper = function (name) {\n      return name ? toKey(name) || name : null\n    }\n\n    player.buffers = mapBuffers(player.buffers, mapper)\n    var start = player.start\n    player.start = function (name, when, options) {\n      var key = mapper(name)\n      var dec = key % 1\n      if (dec) {\n        key = Math.floor(key)\n        options = Object.assign(options || {}, { cents: Math.floor(dec * 100) })\n      }\n      return start(key, when, options)\n    }\n  }\n  return player\n}\n\nfunction mapBuffers (buffers, toKey) {\n  return Object.keys(buffers).reduce(function (mapped, name) {\n    mapped[toKey(name)] = buffers[name]\n    return mapped\n  }, {})\n}\n"]},"metadata":{},"sourceType":"script"}