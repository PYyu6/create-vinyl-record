{"ast":null,"code":"module.exports = function (player) {\n  /**\n   * Adds a listener of an event\n   * @chainable\n   * @param {String} event - the event name\n   * @param {Function} callback - the event handler\n   * @return {SamplePlayer} the player\n   * @example\n   * player.on('start', function(time, note) {\n   *   console.log(time, note)\n   * })\n   */\n  player.on = function (event, cb) {\n    if (arguments.length === 1 && typeof event === 'function') return player.on('event', event);\n    var prop = 'on' + event;\n    var old = player[prop];\n    player[prop] = old ? chain(old, cb) : cb;\n    return player;\n  };\n\n  return player;\n};\n\nfunction chain(fn1, fn2) {\n  return function (a, b, c, d) {\n    fn1(a, b, c, d);\n    fn2(a, b, c, d);\n  };\n}","map":{"version":3,"sources":["/Users/sylviayu/node_modules/sample-player/lib/events.js"],"names":["module","exports","player","on","event","cb","arguments","length","prop","old","chain","fn1","fn2","a","b","c","d"],"mappings":"AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACjC;;;;;;;;;;;AAWAA,EAAAA,MAAM,CAACC,EAAP,GAAY,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AAC/B,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOH,KAAP,KAAiB,UAA/C,EAA2D,OAAOF,MAAM,CAACC,EAAP,CAAU,OAAV,EAAmBC,KAAnB,CAAP;AAC3D,QAAII,IAAI,GAAG,OAAOJ,KAAlB;AACA,QAAIK,GAAG,GAAGP,MAAM,CAACM,IAAD,CAAhB;AACAN,IAAAA,MAAM,CAACM,IAAD,CAAN,GAAeC,GAAG,GAAGC,KAAK,CAACD,GAAD,EAAMJ,EAAN,CAAR,GAAoBA,EAAtC;AACA,WAAOH,MAAP;AACD,GAND;;AAOA,SAAOA,MAAP;AACD,CApBD;;AAsBA,SAASQ,KAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,SAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAAEL,IAAAA,GAAG,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAH;AAAiBJ,IAAAA,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAH;AAAiB,GAAjE;AACD","sourcesContent":["\nmodule.exports = function (player) {\n  /**\n   * Adds a listener of an event\n   * @chainable\n   * @param {String} event - the event name\n   * @param {Function} callback - the event handler\n   * @return {SamplePlayer} the player\n   * @example\n   * player.on('start', function(time, note) {\n   *   console.log(time, note)\n   * })\n   */\n  player.on = function (event, cb) {\n    if (arguments.length === 1 && typeof event === 'function') return player.on('event', event)\n    var prop = 'on' + event\n    var old = player[prop]\n    player[prop] = old ? chain(old, cb) : cb\n    return player\n  }\n  return player\n}\n\nfunction chain (fn1, fn2) {\n  return function (a, b, c, d) { fn1(a, b, c, d); fn2(a, b, c, d) }\n}\n"]},"metadata":{},"sourceType":"script"}